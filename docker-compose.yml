version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - gateway
    ports:
      - "6379:6379"
    volumes:
      - ~/redis/data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - gateway
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - gateway
  
  mongodb_container:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ~/mongodb/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    networks:
      - gateway
    
  app:
    build:
      context: ./build_scripts/app_build
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app
      - ./logs:/app/logs
      - ./tmp_data:/app/tmp_data
      - shared-volumes:/tmp/
    depends_on:
      redis:
        condition: service_healthy
    command: python3 /app/server.py
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    networks:
      - gateway
  worker:
    build:
      context: ./build_scripts/worker_process
      dockerfile: Dockerfile
    command: celery -A tasks worker --loglevel=DEBUG -E
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - redis
    networks:
      - gateway
    volumes: 
      - ./src:/app
      - ./worker_logs:/app/worker_logs
      - shared-volumes:/tmp/
#   zookeeper:
#     image: 'bitnami/zookeeper:3'
#     ports:
#       - '2181:2181'
#     volumes:
#       - 'zookeeper_data:/bitnami'
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#   kafka:
#     image: 'bitnami/kafka:2'
#     ports:
#       - '9092:9092'
#     volumes:
#       - 'kafka_data:/bitnami'
#     environment:
#       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#       - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#     depends_on:
#       - zookeeper

# volumes:
#   zookeeper_data:
#     driver: local
#   kafka_data:
#     driver: local

networks:
  gateway:
    driver: bridge

volumes:
  shared-volumes:
    driver: local